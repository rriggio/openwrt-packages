#!/bin/sh /etc/rc.common

# Copyright (c) 2013, Roberto Riggio
#
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions    
# are met:
# 
#   - Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer.
#   - Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in 
#     the documentation and/or other materials provided with the 
#     distribution.
#   - Neither the name of the CREATE-NET nor the names of its 
#     contributors may be used to endorse or promote products derived 
#     from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

START=99

. /lib/functions.sh

NAME="empower"
PIDF=/var/run/empower.pid

list_interfaces() {

	config_get ifname $1 ifname

	[ "x$ifname" = "x$INTERFACE" ] || {
		return 0
	}

	config_get mode $1 mode
	config_get_bool up $1 up

	[ "$up" = "1" ] || {
		logger -t "$NAME" "Device not up. Ignoring."
		return 0
	}

	[ "$mode" = "monitor" ] || {
		logger -t "$NAME" "Device not in monitor mode. Ignoring."
		return 0
	}

	config_get device $1 device
	config_get CHANNEL $device channel "0"

	[ "$CHANNEL" = "0" -o "$CHANNEL" = "auto" ] && {
		logger -t "$NAME" "Channel not specified. Ignoring."
		return 0
	}

	HWADDR=$(/sbin/ifconfig $ifname 2>&1 | sed -n 's/^.*HWaddr \([0-9A-Za-z\-]*\).*/\1/p' | sed -e 's/\-/:/g' | cut -c1-17)

}

start() {

	# load config parameters
	config_load empower
	config_get MASTER_IP general master_ip
	config_get MASTER_PORT general master_port
	config_get INTERFACE general interface
	config_get BRIDGE general bridge
	config_get DEBUGFS general debugfs
	config_get VIRTUAL_IFNAME general virtual_ifname

	# fetch wifi parameters
	config_load wireless
	config_foreach list_interfaces wifi-iface

	# generate click config
	empower_config.sh -c "$CHANNEL" -m "$HWADDR" -a "$MASTER_IP" -p "$MASTER_PORT" -i "$INTERFACE" -f "$DEBUGFS" -v "$VIRTUAL_IFNAME" > /tmp/empower.click 2>&1

	# generate aligned version
	/usr/bin/click-align /tmp/empower.click > /tmp/empower.aligned.click

	# run click
	(/usr/bin/click /tmp/empower.aligned.click > /var/log/empower.log 2>&1 &)&

	# give click some time to settle down
	sleep 2

	# save pid file
	PID=$(ps | grep /usr/bin/click | grep -v grep | awk '{print $1}')

	[ "x$PID" == "x" ] && {
		logger -t "$NAME" "Unable to start click. Check logs."
		return 0
	}

	echo $PID > $PIDF

        # set monitor interface MTU
	ifconfig $INTERFACE mtu 2300

        # bring interface ip                                          
        ifconfig $VIRTUAL_IFNAME up   

	# add virtual ap to bridge
	brctl addif $BRIDGE $VIRTUAL_IFNAME

}

stop() {

	logger -t "$NAME" "Stopping..."
	[ -f $PIDF ] && {
		kill -9 $(cat $PIDF)
		rm $PIDF
	}

}

